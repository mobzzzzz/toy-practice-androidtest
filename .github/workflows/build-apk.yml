name: Build APK

on:
  workflow_call:
    inputs:
      build_type:
        description: 'Build type (debug or release)'
        required: true
        type: string
      branch_ref:
        description: 'Git reference to build from'
        required: true
        type: string
      artifact_name:
        description: 'Name for the build artifact'
        required: true
        type: string
      timestamp:
        description: 'Build timestamp'
        required: true
        type: string
      version_code:
        description: 'Version code to use for build'
        required: false
        type: string
    outputs:
      artifact_name:
        description: 'Name of the uploaded artifact'
        value: ${{ jobs.build-apk.outputs.artifact_name }}

jobs:
  build-apk:
    name: Build APK (${{ inputs.build_type }})
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ inputs.artifact_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_ref }}
          fetch-depth: 0
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest
        
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ inputs.artifact_name }}
          path: app/build/reports/tests/testDebugUnitTest/

      - name: Build Debug APK
        if: inputs.build_type == 'debug'
        env:
          VERSION_CODE: ${{ inputs.version_code || vars.VERSION_CODE }}
          BUILD_TIMESTAMP: ${{ inputs.timestamp }}
        run: |
          echo "Building debug APK with version code: $VERSION_CODE"
          ./gradlew assembleDebug

      - name: Build Release APK
        if: inputs.build_type == 'release'
        env:
          VERSION_CODE: ${{ inputs.version_code || vars.VERSION_CODE }}
          BUILD_TIMESTAMP: ${{ inputs.timestamp }}
        run: |
          echo "Building release APK with version code: $VERSION_CODE"
          ./gradlew assembleRelease -Prelease

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: |
            app/build/outputs/apk/**/*.apk
            app/build/outputs/apk/**/output-metadata.json
          retention-days: 30 