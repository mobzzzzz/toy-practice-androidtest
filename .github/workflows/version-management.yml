name: Version Management

on:
  pull_request:
    types: [closed]
    branches: ["dev", "main"]
  push:
    branches: ["main"]
    tags:
      - 'v*'

jobs:
  version-control:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Version Update & Tag Creation
        if: github.event.pull_request.merged == true
        id: version
        run: |
          # 최신 태그 가져오기 (beta 또는 릴리즈)
          latest_tag=$(git tag -l "v*" --sort=-v:refname | head -n 1)
          
          if [[ "${{ github.base_ref }}" == "dev" ]]; then
            # beta 버전 생성을 위한 타임스탬프
            timestamp=$(date +%Y%m%d%H%M%S)
            
            if [ -z "$latest_tag" ]; then
              # 태그가 없는 경우 v1.0.0-beta.timestamp 생성
              new_version="v1.0.0-beta.$timestamp"
            else
              # 기존 버전에서 증가
              base_version=$(echo $latest_tag | sed 's/-beta\.[0-9]\+//' | sed 's/^v//')
              IFS='.' read -r major minor patch <<< "$base_version"
              
              case "${{ github.head_ref }}" in
                major/*)
                  new_version="v$((major + 1)).0.0-beta.$timestamp"
                  ;;
                feat/*)
                  new_version="v$major.$((minor + 1)).0-beta.$timestamp"
                  ;;
                fix/* | *)
                  new_version="v$major.$minor.$((patch + 1))-beta.$timestamp"
                  ;;
              esac
            fi
            
            echo "Creating beta tag: $new_version"
            git tag -a "$new_version" -m "Beta release $new_version"
            git push origin "$new_version"
            
          elif [[ "${{ github.base_ref }}" == "main" ]]; then
            # beta 태그에서 릴리즈 버전 추출
            latest_beta=$(git tag -l "v*-beta.*" --sort=-v:refname | head -n 1)
            release_version=$(echo $latest_beta | sed 's/-beta\.[0-9]\+//')
            
            echo "Creating release tag: $release_version"
            git tag -a "$release_version" -m "Release version $release_version"
            git push origin "$release_version"
          fi